AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  urlHostApi:
    Type: String
    Default: https://7z5zk931f7.execute-api.us-east-1.amazonaws.com
  stageDeploy:
    Type: String
    Default: developer
  projectName:
    Type: String
    Default: Rest API
  roleId:
    Type: String
    Default: 'arn:aws:iam::318809572658:role/intl-latam-ec-role-dev'
  basePath:
    Type: String
    Default: DevOps
  domainFrontEnd:
    Type: String
    Default: 7z5zk931f7.execute-api.us-east-1.amazonaws.com 
  protocol:
    Type: String
    Default: 'https://'   
Resources:
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Join [ '-', [!Ref prefixName , !Ref projectName, 'DevOps Technical assessment Carlos Yánez',!Ref stageDeploy] ]
      Description: Api Gateway
      EndpointConfiguration:
        Types:
        - REGIONAL
      Body:
        swagger: "2.0"
        info:
          title: "DevOps Technical assessment Carlos Yánez"
        host: !Ref urlHostApi
        schemes:
        - "https"
        paths:
          /actualizarComision:
            post:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - name: "X-Parse-REST-API-Key"
                in: "header"
                required: true
                type: "string"
              - in: "body"
                name: "DevOpsObject"
                required: true
                schema:
                  $ref: "#/definitions/DevOpsObject"
              responses:
                200:
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/ArrayOfApiResponse"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                400:
                  description: "400 response"
                401:
                  description: "401 response"
                403:
                  description: "403 response"
                405:
                  description: "405 response"
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:756801000732:function:ServiceFunction/invocations"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: "$input.json('$')"
                passthroughBehavior: "when_no_templates"
                httpMethod: "POST"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws"
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses: {}
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                passthroughBehavior: "when_no_match"
                type: "mock"
        securityDefinitions:
          api_key:
            type: "apiKey"
            name: "x-api-key"
            in: "header"
        definitions:
          ArrayOfApiResponse:
            type: "array"
            items:
              $ref: "#/definitions/ApiResponse"
          DevOpsObject:
            type: "object"
            required:
            - "from"
            - "message"
            - "timeToLifeSec"
            - "to"
            properties:
              message:
                type: "string"
              to:
                type: "string"
              from:
                type: "string"
              timeToLifeSec:
                type: "integer"
                format: "int32"
          ApiResponse:
            type: "object"
            properties:
              message:
                type: "string"
  ServiceFunction:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: 
                Fn::ImportValue: 
                    Fn::Sub: "${stackName}-serviceFunction"
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: ApiGateway
          - "/*"